name: Release

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run tests
        run: cargo test --lib

  bump_version:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install cargo-bump
        run: cargo install cargo-bump

      - name: Bump version
        run: |
          git config --global user.email "cesan3@gmail.com"
          git config --global user.name "Cesar Sanchez"
          cargo bump patch
          cargo build
          git add Cargo.toml Cargo.lock
          git commit -m "ci: bump version"
          version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
          git tag $version
          git push origin main --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: true

      - name: Fetch all tags
        run: git fetch --tags

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Get the latest tag
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Checkout the latest tag
        run: git checkout ${{ steps.get_version.outputs.VERSION }}

      - name: Publish to crates.io
        run: |
          echo "GIT_TAG=$GIT_TAG"
          echo cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          GIT_TAG: ${{ steps.get_version.outputs.VERSION }}
